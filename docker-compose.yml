version: "3"

services:
  bot_image:
    build: bot/
    depends_on:
      - db_image
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - postgres:/app/logs
    networks:
      - internet
      - localnet

  db_image:
    container_name: postgres_master
    build: db/
    user: postgres
    environment:
      POSTGRES_DB: $DATABASES
      POSTGRES_USER: $USERNAME_BD
      POSTGRES_PASSWORD: $PASSWORD_BD
      PGDATA: "/var/lib/postgressql/data"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      PGPORT: $PORT_BD
      USERNAME_BD_REPL: $USERNAME_BD_REPL
      PASSWORD_REPL: $PASSWORD_REPL
    volumes:
      - 'postgres:/var/lib/postgressql/data'
      - './db/init.sh:/docker-entrypoint-initdb.d/init.sh'
    restart: unless-stopped
    command: >
       postgres -c "archive_mode=on" -c "archive_command=cp %p /var/lib/postgresql/WAL/archive/%f" -c "max_wal_senders=10" -c "wal_level=replica" -c "wal_log_hints=on"
       -c "logging_collector=on" -c "log_directory=/var/lib/postgressql/data/logs" -c "log_filename=postgresql.log"
    networks:
      - localnet

  db_repl_image:
    container_name: postgres_slave
    user: postgres
    build: db_repl/
    depends_on:
      - db_image
    environment:
      PGPORT: $PORT_BD
      PGDATA: "/var/lib/postgresql/data"
      USERNAME_BD_REPL: $USERNAME_BD_REPL
      PASSWORD_REPL: $PASSWORD_REPL
    restart: unless-stopped
    entrypoint: ["/bin/bash", "-c"]
    command: "var/lib/postgresql/start_script.sh"
    networks:
      - localnet

volumes:
  postgres:
networks:
  internet:
    name: internet
    driver: bridge
  localnet:
    name: localnet
    driver: bridge
